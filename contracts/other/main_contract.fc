#include "imports/stdlib.fc";

const op::depo = 0x292eb3bc;
const op::wthdrwl = 0x4a195ca8;

(int) tln(tuple t) asm "TLEN";

() sendpaymenta() inline {
  ~dump(10);

;;  cell msg = begin_cell()
;;      .store_uint(0x18, 6)
;;      .store_slice(sender_address)
;;      .store_coins(0)
;;      .store_uint(0, 107)
;;      .end_cell();
;;  send_raw_message(msg, 64); ;; pay fees
}

() recv_internal (int b, int val, cell full_msg, slice msg) {
  slice cs = full_msg.begin_parse();
  int flags = cs~load_uint(4);
  slice sender_address = cs~load_msg_addr();
  
  int op = msg~load_uint(32);
  
  if (op == op::depo) {
    ;;slice data = load_data().begin_parse();
;;    cell dict_ref = data~load_ref();
    slice hash = msg~load_bits(256);
    cell dict_ref = begin_cell().end_cell().dict_set(256 + 8, hash, begin_cell().store_uint(val, 32).end_cell().begin_parse());
    var (value, success?) = dict_ref.dict_get?(256 + 8, hash); ;; todo if we will find hash in dict that meanst that we already have such hash in tree / need to baunce it
    ~dump(value);
    ~dump(success?);

    set_data(begin_cell().store_uint(val, 32).store_slice(hash).end_cell());
;;    int value = msg~load_coins();
;;    slice signature = msg~slice_last(1023 - 32);

;;    slice data = load_data().begin_parse();

;;    tuple arr = null();
  
;;    while (~(data.slice_empty?())){
;;      arr = cons(data~load_coins(), arr);
;;      arr = cons(data~load_slice(), arr);
;;    }
    
;;    arr = cons(val, arr);
;;    arr = cons(sig, arr);
    
;;    builder data = begin_cell();
    
;;    while(tln(arr) > 1){
;;      data.store_coins(arr~list_next());      
;;      data.store_slice(arr~list_next());      
;;    }
;;
;;    set_data(data.end_cell());
    
    return();
  }

  if (op == op::wthdrwl){
    ;; todo check if wallet is the owner of funds // if hash(data) == stored_hash // then send funds
    ;; todo two trees: noolifier tree (to check that trx isnt spended already) and subscription tree (to check that depo existed)
    ;; todo checker on two trees
    ;; groth16 in tornado but plonk - more interesting but there no real projects with int
    slice data = get_data().begin_parse();
    int coins = data~load_uint(32);  
    slice sl = data~load_bits(512);
   
    int add = msg~load_uint(256);
    int hash = msg~load_uint(256);
    
    int res = check_signature(hash, sl, add);
    if (res == -1){
      cell msg = begin_cell()
          .store_uint(0x18, 6)
          .store_slice(sender_address)
          .store_coins(coins)
          .store_uint(0, 107)
          .end_cell();
      send_raw_message(msg, 64); ;; pay fees
    }

    return();
  }
  
  throw(0xffff);
}
