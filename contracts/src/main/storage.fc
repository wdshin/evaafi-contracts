;; slice assetTonConfig = begin_cell()
;;     .store_slice(my_address()) ;; oracle
;;     .store_uint(8, 8) ;; decimals
;;     .store_ref(begin_cell()
;;         .store_uint(8300, 16) ;;collateralFactor
;;         .store_uint(9000, 16) ;;liquidationThreshold
;;         .store_uint(500, 16) ;;liquidationPenalty
;;         .store_uint(15854895991, 64) ;;baseBorrowRate
;;         .store_uint(25000000000, 64) ;;borrowRateSLopeLow
;;         .store_uint(187500000000, 64) ;;borrowRateSlopeHigh
;;         .store_uint(10000000000, 64) ;;supplyRateSlopeLow
;;         .store_uint(100000000000, 64) ;;supplyRateSlopeHigh
;;         .store_uint(800000000000000000, 64) ;;targetUtilization
;;       .end_cell())
;;   .end_cell().begin_parse();

;; slice assetTonData = begin_cell()
;;     .store_uint(2000000000, 64) ;;price
;;     .store_uint(1000454300000000000, 64) ;;sRate
;;     .store_uint(1000678000000000000, 64) ;;bRate
;;     .store_uint(40000000000, 64) ;;totalSupplyPrincipal
;;     .store_uint(35000000000, 64) ;;totalBorrowPrincipal
;;     .store_uint(now(), 64) ;;lastAccural
;;   .end_cell().begin_parse();

() storage::save (cell meta, cell userContractCode, cell assetsConfig, int ifActive, slice admin, cell assetsData) impure {
  cell data = begin_cell()
    .store_ref(meta) ;; metaData / boc / init
    .store_ref(userContractCode) ;; userContractCode / boc / init
    .store_ref(
      begin_cell()
        .store_ref(assetsConfig) ;; assetsConfig / dict / admin will upload
        .store_uint(ifActive, 8) ;; ifActive / bool / admin can change
        .store_slice(admin) ;; admin address / slice / init
      .end_cell())
    .store_ref(assetsData) ;;assetsData / dict / can be changed
  .end_cell();
  set_data(data);
}

(cell, cell, cell, int, slice, cell) storage::load () inline {
  slice ds = get_data().begin_parse();
  cell meta = ds~load_ref();
  cell userContractCode = ds~load_ref();
  cell marketConfig = ds~load_ref();
  slice unpackedMarkedConfig = marketConfig.begin_parse();
  cell assetsConfig = unpackedMarkedConfig~load_ref();
  int ifActive = unpackedMarkedConfig~load_uint(8);
  slice admin = unpackedMarkedConfig~load_msg_addr();
  cell assetData = ds~load_ref();
  return (meta, userContractCode, assetsConfig, ifActive, admin, assetData);
}

